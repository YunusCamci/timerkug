{"ast":null,"code":"var _jsxFileName = \"/Users/yunus/Desktop/ReactApp/kugclockwebapp/src/Lang/LanguageSelector.js\";\nimport React from 'react';\nimport { getSelectedLanguage, setSelectedLanguage } from './LanguageManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  const selectedLanguage = getSelectedLanguage();\n  const handleChangeLanguage = newLanguage => {\n    setSelectedLanguage(newLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedLanguage,\n      onChange: e => handleChangeLanguage(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"tr\",\n        children: \"T\\xFCrk\\xE7e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","getSelectedLanguage","setSelectedLanguage","jsxDEV","_jsxDEV","LanguageSelector","selectedLanguage","handleChangeLanguage","newLanguage","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yunus/Desktop/ReactApp/kugclockwebapp/src/Lang/LanguageSelector.js"],"sourcesContent":["import React from 'react';\nimport { getSelectedLanguage, setSelectedLanguage } from './LanguageManagement';\n\nconst LanguageSelector = () => {\n  const selectedLanguage = getSelectedLanguage();\n\n  const handleChangeLanguage = (newLanguage) => {\n    setSelectedLanguage(newLanguage);\n  };\n\n  return (\n    <div>\n      <select value={selectedLanguage} onChange={(e) => handleChangeLanguage(e.target.value)}>\n        <option value=\"en\">English</option>\n        <option value=\"tr\">Türkçe</option>\n      </select>\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,mBAAmB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,gBAAgB,GAAGL,mBAAmB,CAAC,CAAC;EAE9C,MAAMM,oBAAoB,GAAIC,WAAW,IAAK;IAC5CN,mBAAmB,CAACM,WAAW,CAAC;EAClC,CAAC;EAED,oBACEJ,OAAA;IAAAK,QAAA,eACEL,OAAA;MAAQM,KAAK,EAAEJ,gBAAiB;MAACK,QAAQ,EAAGC,CAAC,IAAKL,oBAAoB,CAACK,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAD,QAAA,gBACrFL,OAAA;QAAQM,KAAK,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnCb,OAAA;QAAQM,KAAK,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAfIb,gBAAgB;AAiBtB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}